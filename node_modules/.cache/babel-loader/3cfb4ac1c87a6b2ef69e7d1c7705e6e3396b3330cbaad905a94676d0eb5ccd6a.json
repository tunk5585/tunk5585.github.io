{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5585\\\\Desktop\\\\\\u0442\\u0435\\u0441\\u04422_\\u0432\\u0435\\u0431\\\\portfolio\\\\src\\\\components\\\\InteractiveBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  user-select: none;\n  pointer-events: none;\n  z-index: 1;\n`;\n_c = BackgroundContainer;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));\n  grid-template-rows: repeat(auto-fill, minmax(40px, 1fr));\n  width: 100%;\n  height: 100%;\n`;\n_c2 = Grid;\nconst Cell = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: monospace;\n  font-size: 14px;\n  color: var(--text-primary);\n  opacity: 0.05;\n  transition: opacity 0.3s ease, color 0.3s ease;\n  \n  &.highlight {\n    opacity: 0.3;\n    color: var(--text-primary);\n  }\n  \n  &.active {\n    opacity: 0.7;\n    color: var(--text-primary);\n  }\n`;\n\n// Набор символов для отображения\n_c3 = Cell;\nconst symbols = '0123456789#$%&*+<=>?@[]^_{}~';\nconst InteractiveBackground = () => {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const containerRef = useRef(null);\n\n  // Функция для создания сетки символов\n  const createGrid = () => {\n    if (!containerRef.current) return;\n    const containerWidth = containerRef.current.offsetWidth;\n    const containerHeight = containerRef.current.offsetHeight;\n    const columns = Math.floor(containerWidth / 40);\n    const rows = Math.floor(containerHeight / 40);\n    setDimensions({\n      width: containerWidth,\n      height: containerHeight\n    });\n    const newGrid = [];\n    for (let y = 0; y < rows; y++) {\n      const row = [];\n      for (let x = 0; x < columns; x++) {\n        // Случайный символ\n        const char = symbols.charAt(Math.floor(Math.random() * symbols.length));\n        row.push({\n          id: `${x}-${y}`,\n          x,\n          y,\n          char,\n          // Случайное начальное состояние для разнообразия\n          state: Math.random() < 0.03 ? 'highlight' : 'normal'\n        });\n      }\n      newGrid.push(row);\n    }\n    setGrid(newGrid);\n  };\n\n  // Инициализация сетки\n  useEffect(() => {\n    createGrid();\n    window.addEventListener('resize', createGrid);\n\n    // Периодически обновляем случайные символы для создания эффекта \"живого\" фона\n    const interval = setInterval(() => {\n      setGrid(prevGrid => prevGrid.map(row => row.map(cell => ({\n        ...cell,\n        char: Math.random() < 0.05 ? symbols.charAt(Math.floor(Math.random() * symbols.length)) : cell.char,\n        state: Math.random() < 0.01 ? cell.state === 'normal' ? 'highlight' : 'normal' : cell.state\n      }))));\n    }, 1000);\n    return () => {\n      window.removeEventListener('resize', createGrid);\n      clearInterval(interval);\n    };\n  }, []);\n\n  // Обработка движения мыши\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      setMousePosition({\n        x,\n        y\n      });\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n\n  // Обновление состояний ячеек на основе положения мыши\n  useEffect(() => {\n    setGrid(prevGrid => prevGrid.map(row => row.map(cell => {\n      const cellX = cell.x * 40 + 20;\n      const cellY = cell.y * 40 + 20;\n      const distance = Math.sqrt(Math.pow(cellX - mousePosition.x, 2) + Math.pow(cellY - mousePosition.y, 2));\n      let newState = 'normal';\n      if (distance < 80) newState = 'active';else if (distance < 150) newState = 'highlight';\n      return {\n        ...cell,\n        state: newState\n      };\n    })));\n  }, [mousePosition]);\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: grid.flat().map(cell => /*#__PURE__*/_jsxDEV(Cell, {\n        className: cell.state,\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: cell.state === 'active' ? 0.7 : cell.state === 'highlight' ? 0.3 : 0.05\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: cell.char\n      }, cell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveBackground, \"YVQHjOne/x36dIjYComCgzfUcyM=\");\n_c4 = InteractiveBackground;\nexport default InteractiveBackground;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Cell\");\n$RefreshReg$(_c4, \"InteractiveBackground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","motion","jsxDEV","_jsxDEV","BackgroundContainer","div","_c","Grid","_c2","Cell","_c3","symbols","InteractiveBackground","_s","grid","setGrid","mousePosition","setMousePosition","x","y","dimensions","setDimensions","width","height","containerRef","createGrid","current","containerWidth","offsetWidth","containerHeight","offsetHeight","columns","Math","floor","rows","newGrid","row","char","charAt","random","length","push","id","state","window","addEventListener","interval","setInterval","prevGrid","map","cell","removeEventListener","clearInterval","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","cellX","cellY","distance","sqrt","pow","newState","ref","children","flat","className","initial","opacity","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/5585/Desktop/тест2_веб/portfolio/src/components/InteractiveBackground.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst BackgroundContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));\r\n  grid-template-rows: repeat(auto-fill, minmax(40px, 1fr));\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cell = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n  color: var(--text-primary);\r\n  opacity: 0.05;\r\n  transition: opacity 0.3s ease, color 0.3s ease;\r\n  \r\n  &.highlight {\r\n    opacity: 0.3;\r\n    color: var(--text-primary);\r\n  }\r\n  \r\n  &.active {\r\n    opacity: 0.7;\r\n    color: var(--text-primary);\r\n  }\r\n`;\r\n\r\n// Набор символов для отображения\r\nconst symbols = '0123456789#$%&*+<=>?@[]^_{}~';\r\n\r\nconst InteractiveBackground = () => {\r\n  const [grid, setGrid] = useState([]);\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  const containerRef = useRef(null);\r\n  \r\n  // Функция для создания сетки символов\r\n  const createGrid = () => {\r\n    if (!containerRef.current) return;\r\n    \r\n    const containerWidth = containerRef.current.offsetWidth;\r\n    const containerHeight = containerRef.current.offsetHeight;\r\n    \r\n    const columns = Math.floor(containerWidth / 40);\r\n    const rows = Math.floor(containerHeight / 40);\r\n    \r\n    setDimensions({ width: containerWidth, height: containerHeight });\r\n    \r\n    const newGrid = [];\r\n    for (let y = 0; y < rows; y++) {\r\n      const row = [];\r\n      for (let x = 0; x < columns; x++) {\r\n        // Случайный символ\r\n        const char = symbols.charAt(Math.floor(Math.random() * symbols.length));\r\n        row.push({\r\n          id: `${x}-${y}`,\r\n          x,\r\n          y,\r\n          char,\r\n          // Случайное начальное состояние для разнообразия\r\n          state: Math.random() < 0.03 ? 'highlight' : 'normal'\r\n        });\r\n      }\r\n      newGrid.push(row);\r\n    }\r\n    setGrid(newGrid);\r\n  };\r\n  \r\n  // Инициализация сетки\r\n  useEffect(() => {\r\n    createGrid();\r\n    window.addEventListener('resize', createGrid);\r\n    \r\n    // Периодически обновляем случайные символы для создания эффекта \"живого\" фона\r\n    const interval = setInterval(() => {\r\n      setGrid(prevGrid => \r\n        prevGrid.map(row => \r\n          row.map(cell => ({\r\n            ...cell,\r\n            char: Math.random() < 0.05 ? \r\n              symbols.charAt(Math.floor(Math.random() * symbols.length)) : cell.char,\r\n            state: Math.random() < 0.01 ? \r\n              (cell.state === 'normal' ? 'highlight' : 'normal') : cell.state\r\n          }))\r\n        )\r\n      );\r\n    }, 1000);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', createGrid);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  \r\n  // Обработка движения мыши\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!containerRef.current) return;\r\n      \r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      \r\n      setMousePosition({ x, y });\r\n    };\r\n    \r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    return () => window.removeEventListener('mousemove', handleMouseMove);\r\n  }, []);\r\n  \r\n  // Обновление состояний ячеек на основе положения мыши\r\n  useEffect(() => {\r\n    setGrid(prevGrid => \r\n      prevGrid.map(row => \r\n        row.map(cell => {\r\n          const cellX = cell.x * 40 + 20;\r\n          const cellY = cell.y * 40 + 20;\r\n          \r\n          const distance = Math.sqrt(\r\n            Math.pow(cellX - mousePosition.x, 2) + \r\n            Math.pow(cellY - mousePosition.y, 2)\r\n          );\r\n          \r\n          let newState = 'normal';\r\n          if (distance < 80) newState = 'active';\r\n          else if (distance < 150) newState = 'highlight';\r\n          \r\n          return {\r\n            ...cell,\r\n            state: newState\r\n          };\r\n        })\r\n      )\r\n    );\r\n  }, [mousePosition]);\r\n  \r\n  return (\r\n    <BackgroundContainer ref={containerRef}>\r\n      <Grid>\r\n        {grid.flat().map(cell => (\r\n          <Cell \r\n            key={cell.id}\r\n            className={cell.state}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ \r\n              opacity: cell.state === 'active' ? 0.7 : \r\n                      cell.state === 'highlight' ? 0.3 : 0.05 \r\n            }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            {cell.char}\r\n          </Cell>\r\n        ))}\r\n      </Grid>\r\n    </BackgroundContainer>\r\n  );\r\n};\r\n\r\nexport default InteractiveBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}