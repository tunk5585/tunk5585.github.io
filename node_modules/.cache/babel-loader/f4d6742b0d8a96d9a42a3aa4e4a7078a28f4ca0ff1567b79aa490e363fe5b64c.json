{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5585\\\\Desktop\\\\\\u0442\\u0435\\u0441\\u04422_\\u0432\\u0435\\u0431\\\\portfolio\\\\src\\\\components\\\\InteractiveBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  user-select: none;\n  pointer-events: none;\n  z-index: 1;\n`;\n\n// Наборы символов\n_c = BackgroundContainer;\nconst symbols = '0123456789+-*/=<>%#$&*@[]^_{}~';\nconst InteractiveBackground = () => {\n  _s();\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: -1000,\n    y: -1000\n  });\n  const symbolsArray = useRef([]);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n\n  // Инициализация Canvas и символов\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // Устанавливаем размеры Canvas\n    const containerWidth = containerRef.current.offsetWidth;\n    const containerHeight = containerRef.current.offsetHeight;\n    setDimensions({\n      width: containerWidth,\n      height: containerHeight\n    });\n\n    // Создаем Canvas\n    const canvas = canvasRef.current;\n    canvas.width = containerWidth;\n    canvas.height = containerHeight;\n\n    // Получаем контекст для рисования\n    const context = canvas.getContext('2d');\n    contextRef.current = context;\n\n    // Инициализируем массив символов\n    initSymbols(containerWidth, containerHeight);\n\n    // Запускаем анимацию\n    startAnimation();\n\n    // Обработчик изменения размера окна\n    const handleResize = () => {\n      if (window.resizeTimer) clearTimeout(window.resizeTimer);\n      window.resizeTimer = setTimeout(() => {\n        if (!containerRef.current) return;\n        const newWidth = containerRef.current.offsetWidth;\n        const newHeight = containerRef.current.offsetHeight;\n        setDimensions({\n          width: newWidth,\n          height: newHeight\n        });\n        canvas.width = newWidth;\n        canvas.height = newHeight;\n        initSymbols(newWidth, newHeight);\n      }, 300);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationFrameId.current) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n    };\n  }, []);\n\n  // Обработка движения мыши\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      // Обновляем координаты мыши только при существенном изменении\n      if (Math.abs(x - mousePosition.x) > 5 || Math.abs(y - mousePosition.y) > 5) {\n        setMousePosition({\n          x,\n          y\n        });\n      }\n    };\n\n    // Используем throttle для ограничения частоты обработки событий мыши\n    const handleThrottledMouseMove = throttle(handleMouseMove, 50);\n    window.addEventListener('mousemove', handleThrottledMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleThrottledMouseMove);\n    };\n  }, [mousePosition]);\n\n  // Инициализация массива символов\n  const initSymbols = (width, height) => {\n    const newSymbols = [];\n    const cellSize = 15; // Очень маленький размер ячейки для высокой плотности\n\n    const columns = Math.ceil(width / cellSize);\n    const rows = Math.ceil(height / cellSize);\n    for (let y = 0; y < rows; y++) {\n      for (let x = 0; x < columns; x++) {\n        // Используем пул символов\n        const char = symbols.charAt(Math.floor(Math.random() * symbols.length));\n\n        // Вариация размера шрифта для более интересного вида\n        const fontSize = Math.random() < 0.2 ? 7 + Math.floor(Math.random() * 3) : 9;\n        newSymbols.push({\n          x: x * cellSize + cellSize / 2,\n          y: y * cellSize + cellSize / 2,\n          char,\n          fontSize,\n          baseOpacity: 0.05 + Math.random() * 0.05,\n          // Легкая вариация базовой прозрачности\n          scale: 1,\n          offsetX: 0,\n          offsetY: 0,\n          opacity: 0.05,\n          // Добавляем небольшой произвольный сдвиг для естественного вида\n          randomOffsetX: Math.random() * 4 - 2,\n          randomOffsetY: Math.random() * 4 - 2,\n          // Для эффекта \"живого\" фона - каждый символ будет медленно \"дышать\"\n          pulseSpeed: 0.5 + Math.random() * 1.5,\n          pulseOffset: Math.random() * Math.PI * 2\n        });\n      }\n    }\n    symbolsArray.current = newSymbols;\n  };\n\n  // Основная функция анимации\n  const startAnimation = () => {\n    const render = timestamp => {\n      if (!contextRef.current) return;\n      const ctx = contextRef.current;\n      const {\n        width,\n        height\n      } = dimensions;\n\n      // Очищаем Canvas\n      ctx.clearRect(0, 0, width, height);\n\n      // Для дополнительного эффекта \"живого\" фона\n      const time = timestamp / 1000;\n\n      // Обрабатываем и рисуем каждый символ\n      for (let i = 0; i < symbolsArray.current.length; i++) {\n        const symbol = symbolsArray.current[i];\n\n        // Вычисляем расстояние до курсора\n        const dx = symbol.x - mousePosition.x;\n        const dy = symbol.y - mousePosition.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // Базовое \"дыхание\" символов - очень слабый пульсирующий эффект\n        const basePulse = Math.sin(time * symbol.pulseSpeed + symbol.pulseOffset) * 0.01;\n\n        // Определяем параметры символа в зависимости от расстояния до курсора\n        let opacity, scale, offsetX, offsetY;\n        if (distance < 60) {\n          // Активная зона возле курсора\n          const activeFactor = 1 - distance / 60;\n          opacity = 0.3 + activeFactor * 0.4;\n          scale = 1 + activeFactor * 0.4;\n\n          // Эффект потряхивания для активных символов\n          offsetX = (Math.random() * 2 - 1) * activeFactor * 3;\n          offsetY = (Math.random() * 2 - 1) * activeFactor * 3;\n        } else if (distance < 120) {\n          // Зона влияния курсора\n          const factor = 1 - (distance - 60) / 60;\n          opacity = 0.05 + factor * 0.25;\n          scale = 1 + factor * 0.2 + basePulse;\n          offsetX = 0;\n          offsetY = 0;\n        } else {\n          // Неактивная зона - базовое состояние с лёгким \"дыханием\"\n          opacity = symbol.baseOpacity + basePulse;\n          scale = 1 + basePulse;\n          offsetX = 0;\n          offsetY = 0;\n        }\n\n        // Обновляем значения символа\n        symbol.opacity = opacity;\n        symbol.scale = scale;\n        symbol.offsetX = offsetX;\n        symbol.offsetY = offsetY;\n\n        // Рисуем символ\n        ctx.save();\n        ctx.globalAlpha = symbol.opacity;\n        ctx.font = `${symbol.fontSize * symbol.scale}px monospace`;\n        ctx.fillStyle = 'white';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        // Применяем трансформации\n        ctx.translate(symbol.x + symbol.randomOffsetX + symbol.offsetX, symbol.y + symbol.randomOffsetY + symbol.offsetY);\n\n        // Рисуем символ\n        ctx.fillText(symbol.char, 0, 0);\n        ctx.restore();\n\n        // Периодически меняем символы с очень низкой вероятностью\n        if (Math.random() < 0.0005) {\n          symbol.char = symbols.charAt(Math.floor(Math.random() * symbols.length));\n        }\n      }\n\n      // Продолжаем анимацию\n      animationFrameId.current = requestAnimationFrame(render);\n    };\n\n    // Запускаем цикл анимации\n    animationFrameId.current = requestAnimationFrame(render);\n  };\n\n  // Функция для ограничения частоты вызовов (throttle)\n  function throttle(func, delay) {\n    let lastCall = 0;\n    return function (...args) {\n      const now = Date.now();\n      if (now - lastCall >= delay) {\n        lastCall = now;\n        func(...args);\n      }\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveBackground, \"A1oKUmQSel2++lyF92QkI5f2P64=\");\n_c2 = InteractiveBackground;\nexport default InteractiveBackground;\nvar _c, _c2;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"InteractiveBackground\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","jsxDEV","_jsxDEV","BackgroundContainer","div","_c","symbols","InteractiveBackground","_s","containerRef","canvasRef","contextRef","animationFrameId","mousePosition","setMousePosition","x","y","symbolsArray","dimensions","setDimensions","width","height","current","containerWidth","offsetWidth","containerHeight","offsetHeight","canvas","context","getContext","initSymbols","startAnimation","handleResize","window","resizeTimer","clearTimeout","setTimeout","newWidth","newHeight","addEventListener","removeEventListener","cancelAnimationFrame","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","Math","abs","handleThrottledMouseMove","throttle","newSymbols","cellSize","columns","ceil","rows","char","charAt","floor","random","length","fontSize","push","baseOpacity","scale","offsetX","offsetY","opacity","randomOffsetX","randomOffsetY","pulseSpeed","pulseOffset","PI","render","timestamp","ctx","clearRect","time","i","symbol","dx","dy","distance","sqrt","basePulse","sin","activeFactor","factor","save","globalAlpha","font","fillStyle","textAlign","textBaseline","translate","fillText","restore","requestAnimationFrame","func","delay","lastCall","args","now","Date","ref","children","style","position","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/5585/Desktop/тест2_веб/portfolio/src/components/InteractiveBackground.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BackgroundContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n`;\r\n\r\n// Наборы символов\r\nconst symbols = '0123456789+-*/=<>%#$&*@[]^_{}~';\r\n\r\nconst InteractiveBackground = () => {\r\n  const containerRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const animationFrameId = useRef(null);\r\n  const [mousePosition, setMousePosition] = useState({ x: -1000, y: -1000 });\r\n  const symbolsArray = useRef([]);\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Инициализация Canvas и символов\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n    \r\n    // Устанавливаем размеры Canvas\r\n    const containerWidth = containerRef.current.offsetWidth;\r\n    const containerHeight = containerRef.current.offsetHeight;\r\n    setDimensions({ width: containerWidth, height: containerHeight });\r\n    \r\n    // Создаем Canvas\r\n    const canvas = canvasRef.current;\r\n    canvas.width = containerWidth;\r\n    canvas.height = containerHeight;\r\n    \r\n    // Получаем контекст для рисования\r\n    const context = canvas.getContext('2d');\r\n    contextRef.current = context;\r\n    \r\n    // Инициализируем массив символов\r\n    initSymbols(containerWidth, containerHeight);\r\n    \r\n    // Запускаем анимацию\r\n    startAnimation();\r\n    \r\n    // Обработчик изменения размера окна\r\n    const handleResize = () => {\r\n      if (window.resizeTimer) clearTimeout(window.resizeTimer);\r\n      window.resizeTimer = setTimeout(() => {\r\n        if (!containerRef.current) return;\r\n        \r\n        const newWidth = containerRef.current.offsetWidth;\r\n        const newHeight = containerRef.current.offsetHeight;\r\n        setDimensions({ width: newWidth, height: newHeight });\r\n        \r\n        canvas.width = newWidth;\r\n        canvas.height = newHeight;\r\n        \r\n        initSymbols(newWidth, newHeight);\r\n      }, 300);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (animationFrameId.current) {\r\n        cancelAnimationFrame(animationFrameId.current);\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Обработка движения мыши\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!containerRef.current) return;\r\n      \r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      \r\n      // Обновляем координаты мыши только при существенном изменении\r\n      if (Math.abs(x - mousePosition.x) > 5 || Math.abs(y - mousePosition.y) > 5) {\r\n        setMousePosition({ x, y });\r\n      }\r\n    };\r\n    \r\n    // Используем throttle для ограничения частоты обработки событий мыши\r\n    const handleThrottledMouseMove = throttle(handleMouseMove, 50);\r\n    window.addEventListener('mousemove', handleThrottledMouseMove);\r\n    \r\n    return () => {\r\n      window.removeEventListener('mousemove', handleThrottledMouseMove);\r\n    };\r\n  }, [mousePosition]);\r\n  \r\n  // Инициализация массива символов\r\n  const initSymbols = (width, height) => {\r\n    const newSymbols = [];\r\n    const cellSize = 15; // Очень маленький размер ячейки для высокой плотности\r\n    \r\n    const columns = Math.ceil(width / cellSize);\r\n    const rows = Math.ceil(height / cellSize);\r\n    \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        // Используем пул символов\r\n        const char = symbols.charAt(Math.floor(Math.random() * symbols.length));\r\n        \r\n        // Вариация размера шрифта для более интересного вида\r\n        const fontSize = Math.random() < 0.2 ? 7 + Math.floor(Math.random() * 3) : 9;\r\n        \r\n        newSymbols.push({\r\n          x: x * cellSize + cellSize / 2,\r\n          y: y * cellSize + cellSize / 2,\r\n          char,\r\n          fontSize,\r\n          baseOpacity: 0.05 + Math.random() * 0.05, // Легкая вариация базовой прозрачности\r\n          scale: 1,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n          opacity: 0.05,\r\n          // Добавляем небольшой произвольный сдвиг для естественного вида\r\n          randomOffsetX: Math.random() * 4 - 2,\r\n          randomOffsetY: Math.random() * 4 - 2,\r\n          // Для эффекта \"живого\" фона - каждый символ будет медленно \"дышать\"\r\n          pulseSpeed: 0.5 + Math.random() * 1.5,\r\n          pulseOffset: Math.random() * Math.PI * 2\r\n        });\r\n      }\r\n    }\r\n    \r\n    symbolsArray.current = newSymbols;\r\n  };\r\n  \r\n  // Основная функция анимации\r\n  const startAnimation = () => {\r\n    const render = (timestamp) => {\r\n      if (!contextRef.current) return;\r\n      \r\n      const ctx = contextRef.current;\r\n      const { width, height } = dimensions;\r\n      \r\n      // Очищаем Canvas\r\n      ctx.clearRect(0, 0, width, height);\r\n      \r\n      // Для дополнительного эффекта \"живого\" фона\r\n      const time = timestamp / 1000;\r\n      \r\n      // Обрабатываем и рисуем каждый символ\r\n      for (let i = 0; i < symbolsArray.current.length; i++) {\r\n        const symbol = symbolsArray.current[i];\r\n        \r\n        // Вычисляем расстояние до курсора\r\n        const dx = symbol.x - mousePosition.x;\r\n        const dy = symbol.y - mousePosition.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Базовое \"дыхание\" символов - очень слабый пульсирующий эффект\r\n        const basePulse = Math.sin(time * symbol.pulseSpeed + symbol.pulseOffset) * 0.01;\r\n        \r\n        // Определяем параметры символа в зависимости от расстояния до курсора\r\n        let opacity, scale, offsetX, offsetY;\r\n        \r\n        if (distance < 60) {\r\n          // Активная зона возле курсора\r\n          const activeFactor = 1 - distance / 60;\r\n          opacity = 0.3 + activeFactor * 0.4;\r\n          scale = 1 + activeFactor * 0.4;\r\n          \r\n          // Эффект потряхивания для активных символов\r\n          offsetX = (Math.random() * 2 - 1) * activeFactor * 3;\r\n          offsetY = (Math.random() * 2 - 1) * activeFactor * 3;\r\n        } else if (distance < 120) {\r\n          // Зона влияния курсора\r\n          const factor = 1 - (distance - 60) / 60;\r\n          opacity = 0.05 + factor * 0.25;\r\n          scale = 1 + factor * 0.2 + basePulse;\r\n          offsetX = 0;\r\n          offsetY = 0;\r\n        } else {\r\n          // Неактивная зона - базовое состояние с лёгким \"дыханием\"\r\n          opacity = symbol.baseOpacity + basePulse;\r\n          scale = 1 + basePulse;\r\n          offsetX = 0;\r\n          offsetY = 0;\r\n        }\r\n        \r\n        // Обновляем значения символа\r\n        symbol.opacity = opacity;\r\n        symbol.scale = scale;\r\n        symbol.offsetX = offsetX;\r\n        symbol.offsetY = offsetY;\r\n        \r\n        // Рисуем символ\r\n        ctx.save();\r\n        ctx.globalAlpha = symbol.opacity;\r\n        ctx.font = `${symbol.fontSize * symbol.scale}px monospace`;\r\n        ctx.fillStyle = 'white';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        \r\n        // Применяем трансформации\r\n        ctx.translate(\r\n          symbol.x + symbol.randomOffsetX + symbol.offsetX, \r\n          symbol.y + symbol.randomOffsetY + symbol.offsetY\r\n        );\r\n        \r\n        // Рисуем символ\r\n        ctx.fillText(symbol.char, 0, 0);\r\n        \r\n        ctx.restore();\r\n        \r\n        // Периодически меняем символы с очень низкой вероятностью\r\n        if (Math.random() < 0.0005) {\r\n          symbol.char = symbols.charAt(Math.floor(Math.random() * symbols.length));\r\n        }\r\n      }\r\n      \r\n      // Продолжаем анимацию\r\n      animationFrameId.current = requestAnimationFrame(render);\r\n    };\r\n    \r\n    // Запускаем цикл анимации\r\n    animationFrameId.current = requestAnimationFrame(render);\r\n  };\r\n  \r\n  // Функция для ограничения частоты вызовов (throttle)\r\n  function throttle(func, delay) {\r\n    let lastCall = 0;\r\n    return function(...args) {\r\n      const now = Date.now();\r\n      if (now - lastCall >= delay) {\r\n        lastCall = now;\r\n        func(...args);\r\n      }\r\n    };\r\n  }\r\n  \r\n  return (\r\n    <BackgroundContainer ref={containerRef}>\r\n      <canvas \r\n        ref={canvasRef} \r\n        style={{ \r\n          width: '100%', \r\n          height: '100%', \r\n          position: 'absolute',\r\n          top: 0, \r\n          left: 0 \r\n        }}\r\n      />\r\n    </BackgroundContainer>\r\n  );\r\n};\r\n\r\nexport default InteractiveBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}