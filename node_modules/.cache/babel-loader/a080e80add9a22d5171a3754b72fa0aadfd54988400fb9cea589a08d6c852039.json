{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5585\\\\Desktop\\\\\\u0442\\u0435\\u0441\\u04422_\\u0432\\u0435\\u0431\\\\portfolio\\\\src\\\\components\\\\InteractiveBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  user-select: none;\n  pointer-events: none;\n  z-index: 1;\n`;\n_c = BackgroundContainer;\nconst Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\n// Наборы символов\n_c2 = Canvas;\nconst symbolsSet = '0123456789+-*/=<>%#$&*@[]^_{}~';\nconst InteractiveBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const symbolsArrayRef = useRef([]);\n  const mouseRef = useRef({\n    x: -1000,\n    y: -1000\n  });\n  const requestIdRef = useRef(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    if (!canvas || !container) return;\n\n    // Установка размеров canvas\n    const updateCanvasSize = () => {\n      const {\n        width,\n        height\n      } = container.getBoundingClientRect();\n      canvas.width = width;\n      canvas.height = height;\n\n      // Пересоздаём символы при изменении размера\n      initSymbols(width, height);\n    };\n\n    // Обработчик движения мыши\n    const handleMouseMove = e => {\n      const rect = container.getBoundingClientRect();\n      mouseRef.current = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      };\n    };\n\n    // Инициализация символов\n    const initSymbols = (width, height) => {\n      const cellSize = 15; // Маленький размер ячейки для высокой плотности\n      const columns = Math.ceil(width / cellSize);\n      const rows = Math.ceil(height / cellSize);\n      const newSymbols = [];\n      for (let y = 0; y < rows; y++) {\n        for (let x = 0; x < columns; x++) {\n          const char = symbolsSet.charAt(Math.floor(Math.random() * symbolsSet.length));\n          const fontSize = Math.random() < 0.2 ? 7 + Math.floor(Math.random() * 3) : 9;\n          newSymbols.push({\n            x: x * cellSize + cellSize / 2,\n            y: y * cellSize + cellSize / 2,\n            char,\n            fontSize,\n            baseOpacity: 0.03,\n            opacity: 0.03,\n            scale: 1,\n            offsetX: 0,\n            offsetY: 0\n          });\n        }\n      }\n      symbolsArrayRef.current = newSymbols;\n    };\n\n    // Функция анимации\n    const animate = () => {\n      const ctx = canvas.getContext('2d');\n      const {\n        width,\n        height\n      } = canvas;\n\n      // Очищаем canvas\n      ctx.clearRect(0, 0, width, height);\n      const symbolsArray = symbolsArrayRef.current;\n      const mousePos = mouseRef.current;\n\n      // Рисуем каждый символ\n      for (let i = 0; i < symbolsArray.length; i++) {\n        const symbol = symbolsArray[i];\n\n        // Расстояние до курсора\n        const dx = symbol.x - mousePos.x;\n        const dy = symbol.y - mousePos.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // Анимация в зависимости от расстояния до курсора\n        if (distance < 50) {\n          // Активная зона\n          const factor = 1 - distance / 50;\n          symbol.opacity = 0.1 + factor * 0.3;\n          symbol.scale = 1 + factor * 0.5;\n          symbol.offsetX = (Math.random() * 3 - 1.5) * factor;\n          symbol.offsetY = (Math.random() * 3 - 1.5) * factor;\n        } else if (distance < 100) {\n          // Зона влияния\n          const factor = 1 - (distance - 50) / 50;\n          symbol.opacity = 0.03 + factor * 0.07;\n          symbol.scale = 1 + factor * 0.1;\n          symbol.offsetX = 0;\n          symbol.offsetY = 0;\n        } else {\n          // Нормальное состояние\n          symbol.opacity = 0.03;\n          symbol.scale = 1;\n          symbol.offsetX = 0;\n          symbol.offsetY = 0;\n        }\n\n        // Рисуем символ\n        ctx.save();\n        ctx.globalAlpha = symbol.opacity;\n        ctx.font = `${symbol.fontSize * symbol.scale}px monospace`;\n        ctx.fillStyle = 'white';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.translate(symbol.x + symbol.offsetX, symbol.y + symbol.offsetY);\n        ctx.fillText(symbol.char, 0, 0);\n        ctx.restore();\n\n        // Случайно меняем некоторые символы\n        if (Math.random() < 0.0005) {\n          symbol.char = symbolsSet.charAt(Math.floor(Math.random() * symbolsSet.length));\n        }\n      }\n\n      // Продолжаем анимацию\n      requestIdRef.current = requestAnimationFrame(animate);\n    };\n\n    // Первичная инициализация\n    updateCanvasSize();\n\n    // Запускаем анимацию\n    requestIdRef.current = requestAnimationFrame(animate);\n\n    // Добавляем обработчики событий\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('resize', updateCanvasSize);\n\n    // Отписываемся при размонтировании\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('resize', updateCanvasSize);\n      if (requestIdRef.current) {\n        cancelAnimationFrame(requestIdRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveBackground, \"AsaJ5o3bsKT5CSAa2TTpu0rzmqo=\");\n_c3 = InteractiveBackground;\nexport default InteractiveBackground;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"Canvas\");\n$RefreshReg$(_c3, \"InteractiveBackground\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","BackgroundContainer","div","_c","Canvas","canvas","_c2","symbolsSet","InteractiveBackground","_s","canvasRef","symbolsArrayRef","mouseRef","x","y","requestIdRef","containerRef","current","container","updateCanvasSize","width","height","getBoundingClientRect","initSymbols","handleMouseMove","e","rect","clientX","left","clientY","top","cellSize","columns","Math","ceil","rows","newSymbols","char","charAt","floor","random","length","fontSize","push","baseOpacity","opacity","scale","offsetX","offsetY","animate","ctx","getContext","clearRect","symbolsArray","mousePos","i","symbol","dx","dy","distance","sqrt","factor","save","globalAlpha","font","fillStyle","textAlign","textBaseline","translate","fillText","restore","requestAnimationFrame","window","addEventListener","removeEventListener","cancelAnimationFrame","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/5585/Desktop/тест2_веб/portfolio/src/components/InteractiveBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BackgroundContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Canvas = styled.canvas`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n// Наборы символов\r\nconst symbolsSet = '0123456789+-*/=<>%#$&*@[]^_{}~';\r\n\r\nconst InteractiveBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const symbolsArrayRef = useRef([]);\r\n  const mouseRef = useRef({ x: -1000, y: -1000 });\r\n  const requestIdRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const container = containerRef.current;\r\n    if (!canvas || !container) return;\r\n    \r\n    // Установка размеров canvas\r\n    const updateCanvasSize = () => {\r\n      const { width, height } = container.getBoundingClientRect();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      \r\n      // Пересоздаём символы при изменении размера\r\n      initSymbols(width, height);\r\n    };\r\n    \r\n    // Обработчик движения мыши\r\n    const handleMouseMove = (e) => {\r\n      const rect = container.getBoundingClientRect();\r\n      mouseRef.current = {\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top\r\n      };\r\n    };\r\n    \r\n    // Инициализация символов\r\n    const initSymbols = (width, height) => {\r\n      const cellSize = 15; // Маленький размер ячейки для высокой плотности\r\n      const columns = Math.ceil(width / cellSize);\r\n      const rows = Math.ceil(height / cellSize);\r\n      \r\n      const newSymbols = [];\r\n      \r\n      for (let y = 0; y < rows; y++) {\r\n        for (let x = 0; x < columns; x++) {\r\n          const char = symbolsSet.charAt(Math.floor(Math.random() * symbolsSet.length));\r\n          const fontSize = Math.random() < 0.2 ? 7 + Math.floor(Math.random() * 3) : 9;\r\n          \r\n          newSymbols.push({\r\n            x: x * cellSize + cellSize / 2,\r\n            y: y * cellSize + cellSize / 2,\r\n            char,\r\n            fontSize,\r\n            baseOpacity: 0.03,\r\n            opacity: 0.03,\r\n            scale: 1,\r\n            offsetX: 0,\r\n            offsetY: 0\r\n          });\r\n        }\r\n      }\r\n      \r\n      symbolsArrayRef.current = newSymbols;\r\n    };\r\n    \r\n    // Функция анимации\r\n    const animate = () => {\r\n      const ctx = canvas.getContext('2d');\r\n      const { width, height } = canvas;\r\n      \r\n      // Очищаем canvas\r\n      ctx.clearRect(0, 0, width, height);\r\n      \r\n      const symbolsArray = symbolsArrayRef.current;\r\n      const mousePos = mouseRef.current;\r\n      \r\n      // Рисуем каждый символ\r\n      for (let i = 0; i < symbolsArray.length; i++) {\r\n        const symbol = symbolsArray[i];\r\n        \r\n        // Расстояние до курсора\r\n        const dx = symbol.x - mousePos.x;\r\n        const dy = symbol.y - mousePos.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Анимация в зависимости от расстояния до курсора\r\n        if (distance < 50) {\r\n          // Активная зона\r\n          const factor = 1 - distance / 50;\r\n          symbol.opacity = 0.1 + factor * 0.3;\r\n          symbol.scale = 1 + factor * 0.5;\r\n          symbol.offsetX = (Math.random() * 3 - 1.5) * factor;\r\n          symbol.offsetY = (Math.random() * 3 - 1.5) * factor;\r\n        } else if (distance < 100) {\r\n          // Зона влияния\r\n          const factor = 1 - (distance - 50) / 50;\r\n          symbol.opacity = 0.03 + factor * 0.07;\r\n          symbol.scale = 1 + factor * 0.1;\r\n          symbol.offsetX = 0;\r\n          symbol.offsetY = 0;\r\n        } else {\r\n          // Нормальное состояние\r\n          symbol.opacity = 0.03;\r\n          symbol.scale = 1;\r\n          symbol.offsetX = 0;\r\n          symbol.offsetY = 0;\r\n        }\r\n        \r\n        // Рисуем символ\r\n        ctx.save();\r\n        ctx.globalAlpha = symbol.opacity;\r\n        ctx.font = `${symbol.fontSize * symbol.scale}px monospace`;\r\n        ctx.fillStyle = 'white';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        \r\n        ctx.translate(\r\n          symbol.x + symbol.offsetX,\r\n          symbol.y + symbol.offsetY\r\n        );\r\n        \r\n        ctx.fillText(symbol.char, 0, 0);\r\n        ctx.restore();\r\n        \r\n        // Случайно меняем некоторые символы\r\n        if (Math.random() < 0.0005) {\r\n          symbol.char = symbolsSet.charAt(Math.floor(Math.random() * symbolsSet.length));\r\n        }\r\n      }\r\n      \r\n      // Продолжаем анимацию\r\n      requestIdRef.current = requestAnimationFrame(animate);\r\n    };\r\n    \r\n    // Первичная инициализация\r\n    updateCanvasSize();\r\n    \r\n    // Запускаем анимацию\r\n    requestIdRef.current = requestAnimationFrame(animate);\r\n    \r\n    // Добавляем обработчики событий\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    window.addEventListener('resize', updateCanvasSize);\r\n    \r\n    // Отписываемся при размонтировании\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('resize', updateCanvasSize);\r\n      \r\n      if (requestIdRef.current) {\r\n        cancelAnimationFrame(requestIdRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <BackgroundContainer ref={containerRef}>\r\n      <Canvas ref={canvasRef} />\r\n    </BackgroundContainer>\r\n  );\r\n};\r\n\r\nexport default InteractiveBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}